program new;
const
UsingLinux := False;

var

BitmapsFolderLinux := "Scripts/WurmBitmaps/";
BitmapsFolderWindows := "Scripts\WurmBitmaps\";

WurmLogsFolderWindows := "C:\Users\Theino\wurm\players\Usmaan\logs\";
WurmLogsFolderLinux := "";

BitmapsFolder : String;
WurmLogsFolder : String;

HammerIcon : Int32;
WaterIcon : Int32;
WhetstoneIcon : Int32;
PeltIcon : Int32;
IronLumpIcon : Int32;

FullEnergyBar : Int32;
InventoryTitle : Int32;
ActiveActionBar : Int32;
ZeroPointZeroZero : Int32;

QLTitle : Int32;
ForgeTitle : Int32;
StartOfToolBelt : Int32;
FirstHalfOfStamina : Int32;


CurrentImpToolIcon : Int32;

clientWidth : Integer;
clientHeight : Integer;

foundActiveActionBar : Boolean;
foundEnergyBar : Boolean;
foundForgeTitle : Boolean;
foundIcon : Boolean;
foundFirstHalfOfStamina : Boolean;

CurrentImpToolNumber : Integer;

xForgeTitleLocation : Integer;
yForgeTitleLocation : Integer;

xIconLocation : Integer;
yIconLocation : Integer;

xTemp : Integer;
yTemp : Integer;

begin
  GetClientDimensions(clientWidth, clientHeight);
  clientWidth -= 1;
  clientHeight -= 1;
  CurrentImpToolNumber := 1;

  if UsingLinux then
  begin
    BitmapsFolder := BitmapsFolderLinux;
    WurmLogsFolder := WurmLogsFolderLinux;
  end else
  begin
    BitmapsFolder := BitmapsFolderWindows;
    WurmLogsFolder := WurmLogsFolderWindows;
  end;

  HammerIcon := LoadBitmap(BitmapsFolder + "HammerIcon.bmp");
  WaterIcon := LoadBitmap(BitmapsFolder + "WaterIcon.bmp");
  WhetstoneIcon := LoadBitmap(BitmapsFolder + "WhetstoneIcon.bmp");
  PeltIcon := LoadBitmap(BitmapsFolder + "PeltIcon.bmp");
  IronLumpIcon := LoadBitmap(BitmapsFolder + "IronLumpIcon.bmp");

  FullEnergyBar := LoadBitmap(BitmapsFolder + "FullEnergyBar.bmp");
  InventoryTitle := LoadBitmap(BitmapsFolder + "InventoryTitle.bmp");
  ActiveActionBar := LoadBitmap(BitmapsFolder + "ActiveActionBar.bmp");
  ZeroPointZeroZero := LoadBitmap(BitmapsFolder + "ZeroPointZeroZero.bmp");

  QLTitle := LoadBitmap(BitmapsFolder + "QLTitle.bmp");
  ForgeTitle := LoadBitmap(BitmapsFolder + "ForgeTitle.bmp");
  StartOfToolBelt := LoadBitmap(BitmapsFolder + "StartOfToolBelt.bmp");
  FirstHalfOfStamina := LoadBitmap(BitmapsFolder + "FirstHalfOfStamina.bmp");
  wait(2000);
  CurrentImpToolNumber := 1;0
  while true do
  begin
    foundEnergyBar := FindBitmapToleranceIn(FullEnergyBar, xTemp, yTemp, 0, 0, clientWidth, clientHeight, 20);
    foundActiveActionBar := FindBitmapToleranceIn(ActiveActionBar, xTemp, yTemp, 0, 0, clientWidth, clientHeight, 10);
    while (NOT foundEnergyBar) OR foundActiveActionBar do
    begin
      wait(500);
      foundEnergyBar := FindBitmapToleranceIn(FullEnergyBar, xTemp, yTemp, 0, 0, clientWidth, clientHeight, 20);
      foundActiveActionBar := FindBitmapToleranceIn(ActiveActionBar, xTemp, yTemp, 0, 0, clientWidth, clientHeight, 10);
    end;
    case CurrentImpToolNumber of
      1 : CurrentImpToolIcon := HammerIcon;
      2 : CurrentImpToolIcon := WaterIcon;
      3 : CurrentImpToolIcon := WhetstoneIcon;
      4 : CurrentImpToolIcon := PeltIcon;
      5 : CurrentImpToolIcon := IronLumpIcon;
    else
      begin
        WriteLn("Invalid CurrentImpToolIcon, terminating");
        TerminateScript();
      end;
    end;
    SendKeys(IntToStr(CurrentImpToolIcon), 20, 20);
    foundForgeTitle := FindBitmapToleranceIn(ForgeTitle, xForgeTitleLocation, yForgeTitleLocation,0,0,clientWidth,clientHeight,5);
    if foundForgeTitle then
    begin
      foundIcon := FindBitmapToleranceIn(CurrentImpToolIcon, xIconLocation, yIconLocation, xForgeTitleLocation, xForgeTitleLocation, clientWidth, clientHeight,5);
      if foundIcon then
      begin
        MoveMouse(xIconLocation, yIconLocation);
        wait(400 + random(200));
        SendKeys("t", 20, 20);
        wait(1000 + random(500));
      end;
    end;
    foundFirstHalfOfStamina := FindBitmapToleranceIn(FirstHalfOfStamina, xTemp, yTemp, 0, 0, clientWidth, clientHeight, 20);
    foundActiveActionBar := FindBitmapToleranceIn(ActiveActionBar, xTemp, yTemp, 0, 0, clientWidth, clientHeight, 10);
    while (NOT foundFirstHalfOfStamina) OR foundActiveActionBar do
    begin
      wait(500);
      foundFirstHalfOfStamina := FindBitmapToleranceIn(FirstHalfOfStamina, xTemp, yTemp, 0, 0, clientWidth, clientHeight, 20);
      foundActiveActionBar := FindBitmapToleranceIn(ActiveActionBar, xTemp, yTemp, 0, 0, clientWidth, clientHeight, 10);
    end;
  end;
end.
